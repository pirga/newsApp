exec sp_MSforeachtable "declare @name nvarchar(max); set @name = parsename('?', 1); exec sp_MSdropconstraints @name";
exec sp_MSforeachtable "drop table ?";

IF OBJECT_ID('Role', N'U') IS NOT NULL
BEGIN
	DROP TABLE Role;
END

IF OBJECT_ID('Users', N'U') IS NOT NULL
BEGIN
	DROP TABLE Users;
END

IF OBJECT_ID('News', N'U') IS NOT NULL
BEGIN
	DROP TABLE News;
END

IF OBJECT_ID('Comment', N'U') IS NOT NULL
BEGIN
	DROP TABLE Comment;
END

IF OBJECT_ID('Category', N'U') IS NOT NULL
BEGIN
	DROP TABLE Category;
END

IF OBJECT_ID('Category_News', N'U') IS NOT NULL
BEGIN
	DROP TABLE Category_News;
END

IF OBJECT_ID('Tag', N'U') IS NOT NULL
BEGIN
	DROP TABLE Tag;
END

IF OBJECT_ID('Tag_News', N'U') IS NOT NULL
BEGIN
	DROP TABLE Tag_News;
END

IF OBJECT_ID('Like_News', N'U') IS NOT NULL
BEGIN
	DROP TABLE Like_News;
END

IF OBJECT_ID('Like_Comment', N'U') IS NOT NULL
BEGIN
	DROP TABLE Like_Comment;
END

IF OBJECT_ID('Role', N'U') IS NULL
BEGIN
	CREATE TABLE Role(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Name NVARCHAR(255) UNIQUE NOT NULL,
		);		
END

IF OBJECT_ID('Users', N'U') IS NULL
BEGIN
	CREATE TABLE Users(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Id_role INT NOT NULL,
		Date_reg DATETIME DEFAULT GETDATE() NOT NULL,
		Login NVARCHAR(255) UNIQUE NOT NULL,
		Password NVARCHAR(255) NOT NULL,
		Email NVARCHAR(255) UNIQUE NOT NULL,
		FOREIGN KEY (Id_role) REFERENCES Role(Id) ON DELETE CASCADE ON UPDATE CASCADE
		);
END

IF OBJECT_ID('News', N'U') IS NULL
BEGIN
	CREATE TABLE News(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Date_add DATETIME DEFAULT GETDATE() NOT NULL,
		Name NVARCHAR(255) NOT NULL,
		Description NTEXT NOT NULL,		
		);
END

IF OBJECT_ID('Comment', N'U') IS NULL
BEGIN
	CREATE TABLE Comment(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Id_user INT NOT NULL,
		Id_news INT NOT NULL,				
		Id_comment_parent INT NULL,
		Date_add DATETIME DEFAULT GETDATE() NOT NULL,
		Text NTEXT NOT NULL,
		FOREIGN KEY (Id_user) REFERENCES Users(Id) ON DELETE CASCADE ON UPDATE CASCADE,
		FOREIGN KEY (Id_news) REFERENCES News(Id) ON DELETE CASCADE ON UPDATE CASCADE,
		FOREIGN KEY (Id_comment_parent) REFERENCES Comment(Id)
		);
END

IF OBJECT_ID('Category', N'U') IS NULL
BEGIN
	CREATE TABLE Category(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Name NVARCHAR(255) UNIQUE NOT NULL
		);
END

IF OBJECT_ID('Category_News', N'U') IS NULL
BEGIN
	CREATE TABLE Category_News(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Id_news INT NOT NULL,
		Id_category INT NOT NULL,
		FOREIGN KEY (Id_news) REFERENCES News(Id) ON DELETE CASCADE ON UPDATE CASCADE,
		FOREIGN KEY (Id_category) REFERENCES Category(Id) ON DELETE CASCADE ON UPDATE CASCADE
		);
END

IF OBJECT_ID('Tag', N'U') IS NULL
BEGIN
	CREATE TABLE Tag(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Name NVARCHAR(255) UNIQUE NOT NULL
		);
END

IF OBJECT_ID('Tag_News', N'U') IS NULL
BEGIN
	CREATE TABLE Tag_News(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Id_news INT NOT NULL,
		Id_tag INT NOT NULL,
		FOREIGN KEY (Id_news) REFERENCES News(Id) ON DELETE CASCADE ON UPDATE CASCADE,
		FOREIGN KEY (Id_tag) REFERENCES Tag(Id) ON DELETE CASCADE ON UPDATE CASCADE
		);
END

IF OBJECT_ID('Like_News', N'U') IS NULL
BEGIN
	CREATE TABLE Like_News(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Id_user INT NOT NULL,
		Id_news INT NOT NULL,		
		Value INT NOT NULL,
		FOREIGN KEY (Id_user) REFERENCES Users(Id) ON DELETE CASCADE ON UPDATE CASCADE,
		FOREIGN KEY (Id_news) REFERENCES News(Id) ON DELETE CASCADE ON UPDATE CASCADE
		);
END

IF OBJECT_ID('Like_Comment', N'U') IS NULL
BEGIN
	CREATE TABLE Like_Comment(
		Id INT NOT NULL PRIMARY KEY IDENTITY(1,1),
		Id_user INT NOT NULL,
		Id_comment INT NOT NULL,		
		Value BIT DEFAULT 0 NOT NULL,
		FOREIGN KEY (Id_user) REFERENCES Users(Id) ON DELETE NO ACTION ON UPDATE NO ACTION,
		FOREIGN KEY (Id_comment) REFERENCES Comment(Id) ON DELETE CASCADE ON UPDATE CASCADE
		);
END

INSERT INTO Role VALUES('NaUsers');
INSERT INTO Role VALUES('Users');
INSERT INTO Role VALUES('Admin');

INSERT INTO News VALUES(GETDATE(),'Name news1','description news1');
INSERT INTO News VALUES(GETDATE(),'Name news2','description news2');
INSERT INTO News VALUES(GETDATE(),'Name news3','description news3');
INSERT INTO News VALUES(GETDATE(),'Name news4','description news4');
INSERT INTO News VALUES(GETDATE(),'Name news5','description news5');



SELECT * FROM Role;
SELECT * FROM Users;
SELECT * FROM News;
SELECT * FROM Comment;
SELECT * FROM Category;
SELECT * FROM Category_News;
SELECT * FROM Tag;
SELECT * FROM Tag_News;
SELECT * FROM Like_News;
SELECT * FROM Like_Comment;